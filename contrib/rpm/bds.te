policy_module(bds, 1.100.1)

########################################
#
# Declarations
#

type bds_t;
type bds_exec_t;
init_daemon_domain(bds_t, bds_exec_t)

permissive bds_t;

type bds_initrc_exec_t;
init_script_file(bds_initrc_exec_t)

type bds_conf_t;
files_type(bds_conf_t)

type bds_var_lib_t;
files_type(bds_var_lib_t)

type bds_var_run_t;
files_type(bds_var_run_t)

type bds_port_t;
corenet_port(bds_port_t)

########################################
#
# bds local policy
#
allow bds_t self:process { fork };

allow bds_t self:fifo_file rw_fifo_file_perms;
allow bds_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(bds_t, bds_conf_t, bds_conf_t)
manage_files_pattern(bds_t, bds_conf_t, bds_conf_t)

manage_dirs_pattern(bds_t, bds_var_lib_t, bds_var_lib_t)
manage_files_pattern(bds_t, bds_var_lib_t, bds_var_lib_t)
files_var_lib_filetrans(bds_t, bds_var_lib_t, { dir file })

manage_dirs_pattern(bds_t, bds_var_run_t, bds_var_run_t)
manage_files_pattern(bds_t, bds_var_run_t, bds_var_run_t)

sysnet_dns_name_resolve(bds_t)
corenet_all_recvfrom_unlabeled(bds_t)

allow bds_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(bds_t)
corenet_tcp_sendrecv_generic_node(bds_t)
corenet_tcp_sendrecv_all_ports(bds_t)
corenet_tcp_bind_generic_node(bds_t)

gen_require(`
    type bds_port_t;
')
allow bds_t bds_port_t:tcp_socket name_bind;

gen_require(`
    type bds_port_t;
')
allow bds_t bds_port_t:tcp_socket name_connect;

domain_use_interactive_fds(bds_t)

files_read_etc_files(bds_t)

miscfiles_read_localization(bds_t)

sysnet_dns_name_resolve(bds_t)

allow bds_t bds_exec_t:file execute_no_trans;
allow bds_t self:process setsched;
corecmd_exec_ls(bds_t)
corenet_tcp_connect_http_port(bds_t)
dev_read_urand(bds_t)
fs_getattr_xattr_fs(bds_t)
kernel_read_system_state(bds_t)
